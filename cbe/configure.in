dnl cbe
dnl
dnl Copyright (c) 2001  Ludwig-Maximilian-Universitaet Muenchen
dnl 
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl  
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl  
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl  
dnl  
dnl As a special exception to the GNU General Public License, if you
dnl distribute this file as part of a program that contains a configuration
dnl script generated by Autoconf, you may include it under the same
dnl distribution terms that you use for the rest of that program.
dnl  

AC_REVISION($Revision: 1.8 $)
AC_INIT(src/cbe.cc)
AM_INIT_AUTOMAKE(cbe, 0.0.2)
AM_MAINTAINER_MODE
AM_ACLOCAL_INCLUDE(macros)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CXX
AC_PROG_CC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME

dnl Check for GNU getopt
AC_CHECK_FUNC(getopt_long,
        [AC_DEFINE(HAVE_GETOPT_H,1,
                   [Define this if there is a system getopt.h header])],
        [AC_MSG_RESULT(Using included getopt header)])

dnl ###################################################################
dnl Taken from gracer, Copyright (c) GRacer Developers
dnl (Slightly modified by Andreas Bauer)
dnl ###################################################################

dnl ## XLib ###########################################################

saved_CXXFLAGS="CXXFLAGS"
saved_LDFLAGS="$LDFLAGS"

AC_PATH_X
AC_PATH_XTRA

CXXFLAGS="$CXXFLAGS $X_CFLAGS"
X_LIBS="$X_LIBS $X_EXTRA_LIBS"

if test "x$no_x" = "xyes"; then
  AC_MSG_ERROR([
*** X libraries or include files not found. Check 'config.log' for
*** more details.])
fi

dnl check X11 library
AC_CHECK_LIB(X11, XOpenDisplay, X_LIBS="$X_LIBS -lX11",
  AC_MSG_ERROR([*** libX11 not found. Check 'config.log' for more detail.]),
  $X_LIBS)

dnl check for Xext library
AC_CHECK_LIB(Xext, XShmAttach, X_LIBS="$X_LIBS -lXext",
  dnl On AIX, it is in XextSam instead, but we still need -lXext
  AC_CHECK_LIB(XextSam, XShmAttach, X_LIBS="$X_LIBS -lXextSam -lXext",
    no_xext_lib=yes, $X_LIBS), $X_LIBS)

dnl check for Xt library
X_LIBS="$X_LIBS $X_PRE_LIBS"
AC_CHECK_LIB(Xt, XtGetSelectionValue, X_LIBS="$X_LIBS -lXt",
  AC_MSG_ERROR([*** libXt not found. Check 'config.log' for more detail.]),
  $X_LIBS)

dnl check for Xmu library
AC_CHECK_LIB(Xmu, XmuLookupStandardColormap, X_LIBS="$X_LIBS -lXmu",
  AC_MSG_ERROR([*** libXmu not found. Check 'config.log' for more detail.]),
  $X_LIBS)

dnl check for Xi library
AC_CHECK_LIB(Xi, XOpenDevice, X_LIBS="$X_LIBS -lXi",, $X_LIBS)

AC_SUBST(X_CFLAGS)
AC_SUBST(X_LDFLAGS)
AC_SUBST(X_LIBS)

CXXFLAGS="$AM_CXXFLAGS"
LDFLAGS="$saved_LDFLAGS"


dnl ######################## Test for libtiff #########################
  if test -z "$LIBTIFF"; then
    AC_CHECK_LIB(tiff, TIFFReadScanline,
      AC_CHECK_HEADER(tiffio.h,
        TIFF='tiff'; LIBTIFF='-ltiff',
        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
      AC_CHECK_LIB(tiff, TIFFWriteScanline,
        AC_CHECK_HEADER(tiffio.h,
          TIFF='tiff'; LIBTIFF='-ltiff -ljpeg -lz',
          AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
        AC_CHECK_LIB(tiff34, TIFFFlushData,
          AC_CHECK_HEADER(tiffio.h,
            TIFF='tiff'; LIBTIFF='-ltiff34 -ljpeg -lz',
            AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***), -ljpeg -lz -lm), -ljpeg -lz -lm), -lm)
  fi

AC_SUBST(TIFF)
AC_SUBST(LIBTIFF)

dnl ## OpenGL #########################################################

AC_CHECK_LIB(m, floor)

saved_CXXFLAGS="$CXXFLAGS"
saved_LDFLAGS="$LDFLAGS"
saved_LIBS="$LIBS"

AC_ARG_WITH(gl, [  --with-gl=DIR           specify OpenGL/Mesa prefix],
  gl_prefix=$with_gl)

if test x$gl_prefix != x ; then
  GL_CFLAGS="-I$gl_prefix/include"
  GL_LDFLAGS="-L$gl_prefix/lib"
fi

CXXFLAGS="$CXXFLAGS $X_CFLAGS $GL_CFLAGS"
LDFLAGS="$GL_LDFLAGS $X_LDFLAGS $saved_LDFLAGS"

for gl in GL MesaGL; do
  AC_MSG_CHECKING([${gl}])
  LIBS="$saved_LIBS ${X_LIBS} -l${gl}"
  AC_TRY_LINK( ,[char glBegin(); glBegin(); ], have_GL=yes, have_GL=no)
  AC_MSG_RESULT($have_GL)
  if test "x${have_GL}" = xyes; then
    GL_LIBS="-l${gl}"
    break;
  fi
done
if test "x${have_GL}" = xno; then
  AC_MSG_CHECKING([Mesa with pthreads])
  LIBS="$saved_LIBS ${X_LIBS} -lMesaGL -lpthread"
  AC_TRY_LINK( ,[ char glBegin(); glBegin(); ], \
              have_Mesa_pthread=yes, have_Mesa_pthread=no)
  AC_MSG_RESULT($have_Mesa_pthread)
  if test x$have_Mesa_pthread = xyes; then
    GL_LIBS="-lMesaGL -lpthread"
  else
    AC_MSG_ERROR(Couldn't find OpenGL library.)
  fi
fi

dnl test for GLU
for glu in GLU MesaGLU; do
  AC_MSG_CHECKING([${glu}])
  LIBS="$saved_LIBS ${X_LIBS} ${GL_LIBS} -l${glu}"
  AC_TRY_LINK( ,[ char gluLookAt(); gluLookAt(); ], have_GLU=yes, have_GLU=no)
  AC_MSG_RESULT($have_GLU)
  if test "x${have_GLU}" = xyes; then
    GL_LIBS="$GL_LIBS -l${glu}"
    break;
  fi
done
if test "x${have_GLU}" = xno; then
  AC_MSG_ERROR(Couldn't find OpenGL Utility library.)
fi

AC_SUBST(GL_CFLAGS)
AC_SUBST(GL_LDFLAGS)
AC_SUBST(GL_LIBS)

CXXFLAGS="$saved_CXXFLAGS"
LDFLAGS="$saved_LDFLAGS"
LIBS="$saved_LIBS"

dnl ## GLUT ###########################################################

saved_CXXFLAGS="$CXXFLAGS"
saved_LDFLAGS="$LDFLAGS"
saved_LIBS="$LIBS"

AC_ARG_WITH(glut, [  --with-glut=DIR         specify Glut prefix],
  glut_prefix=$with_glut)

if test x$glut_prefix != x ; then
  GLUT_CFLAGS="-I$glut_prefix/include"
  GLUT_LDFLAGS="-L$glut_prefix/lib"
fi

LDFLAGS="$LDFLAGS $GLUT_LDFLAGS $GL_LDFLAGS $X_LIBFLAGS"
LIBS="$LIBS $X_LIBS $GL_LIBS"

AC_CHECK_LIB(glut, glutKeyboardUpFunc, GLUT_LIBS="-lglut",
  AC_MSG_ERROR(
    [*** glut (>=3.7) not found. Check 'config.log' for more detail.]))

LIBS="$saved_LIBS"
LDFLAGS="$saved_LDFLAGS"
CXXFLAGS="$saved_CXXFLAGS $GLUT_CFLAGS"

AC_SUBST(GLUT_CFLAGS)
AC_SUBST(GLUT_LDFLAGS)
AC_SUBST(GLUT_LIBS)

CXXFLAGS="$saved_CXXFLAGS"
LDFLAGS="$saved_LDFLAGS"
LIBS="$saved_LIBS"

dnl ###################################################################
dnl Finished taking settings from gracer. Cheers boys.
dnl ###################################################################

AC_OUTPUT([Makefile
           cbe.spec
	   macros/Makefile
	   doc/Makefile
	   pixmaps/Makefile
	   src/linotte/Makefile
	   src/Makefile])
